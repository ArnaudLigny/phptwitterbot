#!/usr/bin/env php
<?php
require_once dirname(__FILE__).'/../lib/TwitterBotsFarm.class.php';

// Check if we have at least a configuration file provided as the first argument
if (!isset($argv[1]) || !$configFile = (file_exists($filePath = $argv[1]) ? $filePath : false))
{
  exit(help());
}

$botName = null;
$debug = false;
$cronLogsFile = null;

foreach (array_slice($argv, 2) as $argValue)
{
  $arg = $name = substr($argValue, strpos($argValue, '--') + 2);
  
  if (false !== strpos($arg, '='))
  {
    list($name, $optionValue) = explode('=', $arg);
  }
  
  switch ($name)
  {
    case 'bot':
      $botName = $optionValue;
      break;
    
    case 'cronlogs':
      $cronLogsFile = $optionValue;
      break;
    
    case 'debug':
      $debug = true;
      break;
    
    case 'help':
      exit(help($argv[0]));
      break;
  }
}

try
{
  $farm = TwitterBotsFarm::create($configFile, $cronLogsFile, $debug);
  
  if (!is_null($botName))
  {
    $farm->runBot($botName);
  }
  else
  {
    $farm->run();
  }
}
catch (Exception $e)
{
  exit(sprintf('Farm execution stopped with error: ', $e->getMessage().PHP_EOL));
}

function help($scriptName)
{
  return <<<EOF
Â© 2009 PHPTwitterBot, MIT licensed - http://code.google.com/p/phptwitterbot/

This executable runs a PHPTwitterBot farm from the command line, using a YAML 
configuration file.

Usage:

    \$ ./{$scriptName} config/bots_configuration.yml
    \$ ./{$scriptName} /home/user/my_other_bots_configuration.yml

You can set the path of the cronlogs file you want to use (this file will store 
the logs of bot executions).

You can also enable debugging using the --debug option:

    \$ ./{$scriptName} configFile.yml --debug


EOF;
}